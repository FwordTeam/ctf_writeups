from Crypto.Util.number import *
from gmpy import *
from gmpy2 import *
from fractions import *


p=110392812572095781629033626461777680981731032808015199310312784566059049600266615730910173700722530645921767904040666859845759855899171064227171760696744811041887765382733277641396297698645788718027521718316508494423226537972536234380990537863227706927489323347867509188841443774350017909663670833223655588223
q=69376500914135809143896892617124792380066665086215457963117296591673626205234347401798303621685005375198345975830726497813029912915245558265675669942729313335880128042132207634905921902600305401425561233768497274414924144369926647092922572677599530235861187336718789051105802164129698395171685496400568580329
n=7658667062322026038449982247558761740004869156981524026836170582083896041054040325870190417072975704156748210501677817474529699134763410714206058569898628559393561314371939088661660712983662947603280590188476639425295406857391436940961662270067242446960578332648268884988326969765931295295653691509883260243479526535660482751525751040392249510776659146386445128015172986863059432004644090045463124989246912213064462529744106006633353340537798307164747936187787865898686332132141593938203766535698957683075275429743508979879596943605491190852215951238869768425523897496010303874659739389741386213401759122134521865367
c
g=3173266108480864344630574653270711472962208278169298213934003820720634688472644688178935280159576372271888969719336981514285007294689035334063600340820326339018416486028198663318246984117664955950499595575037869181301402829895779123326575646681843835778223199445602851181780985596277797165111912918287352035717035344839118674479087164465818211714200369680837322410441767111029675205201472798650615085428328596386452138244167315071094748555117741356446821503521891421312846459161585622302252864738694473713632060375236261875793635751255526289175490816746810606978361246769570256502263040074875660498915869912918565028
r=4811148274236838718580901371537529776357605032286308799035125936821657010663557779047093956252128773184523808434361295277626385467985747378199529873134367508239601114357520457881393662127600234904078137502730228095689350858104936881856200114074440939842102745023757402738797815344867151443958121052525790529537912433730569223987101552797272302958405086844256696753129411265858840917456947139625683179056236963373802164979201780993274750302479783904747491379639231550879779421397932771234045712899261971627333104521206649896389906938194543970445100931924677403517488286494090082603730586213455232218280709917613433588

lamda=lcm(p-1,q-1)
mu=invert(((pow(int(g),int(lamda),int(n**2))-1)//n),n)

m=(((pow(int(c),int(lamda),int(n**2))-1)/n)*mu)%n
print hex(m)[2:].decode('hex')